/*!
 * vt-lazyload v1.1.1
 * (c) Rheimer van Dijk
 * Released under the MIT License.
 */
"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function urlCheck(e,r){var t=e,n=r,a=new XMLHttpRequest;return a.open("GET",t,!1),a.send(),200==a.status?t:n}var index={install:function(e,r){var t="0px 0px 100px 0px",n=!1,a="lazyLoad",i=!1;if(r&&(t=r.margin?r.margin:"0px 0px 100px 0px",n=!!r.fadeIn&&r.fadeIn,a=r.directive?r.directive:"lazyLoad",i=!!r.errorImg&&r.errorImg,r.cssAnimate)){var o=document.createElement("link");o.rel="text/css",o.href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2/animate.min.css",document.head.appendChild(o),n=!1}e.directive(a,{bind:function(e,a){n&&(e.style.opacity="0",e.style.transition=n),new IntersectionObserver(function(t,o){t.forEach(function(t){if(t.isIntersecting){var s;if(a.value.animation){if(e.src=urlCheck(a.value.url,i),r.cssAnimate)(s=e.classList).add.apply(s,["animated"].concat(_toConsumableArray(a.value.animation)))}else e.src=urlCheck(a.value,i);n&&(e.style.opacity="1"),o.unobserve(t.target)}})},{rootMargin:t}).observe(e)}})}};module.exports=index;
//# sourceMappingURL=index.min.js.map
