/*!
 * vt-lazyload v1.1.2
 * (c) Rheimer van Dijk
 * Released under the MIT License.
 */
"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function urlCheck(e,t,r){t?fetch(e).then(function(n){200==n.status?r.src=e:404==n.status&&(r.src=t)}):r.src=e}var index={install:function(e,t){var r="0px 0px 100px 0px",n=!1,a="lazyLoad",i=!1;if(t&&(r=t.margin?t.margin:"0px 0px 100px 0px",n=!!t.fadeIn&&t.fadeIn,a=t.directive?t.directive:"lazyLoad",i=!!t.errorImg&&t.errorImg,t.cssAnimate)){var o=document.createElement("link");o.rel="text/css",o.href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2/animate.min.css",document.head.appendChild(o),n=!1}e.directive(a,{bind:function(e,a){n&&(e.style.opacity="0",e.style.transition=n),new IntersectionObserver(function(r,o){r.forEach(function(r){if(r.isIntersecting){var s;if(a.value.animation){if(urlCheck(a.value.url,i,e),t.cssAnimate)(s=e.classList).add.apply(s,["animated"].concat(_toConsumableArray(a.value.animation)))}else urlCheck(a.value,i,e);n&&(e.style.opacity="1"),o.unobserve(r.target)}})},{rootMargin:r}).observe(e)}})}};module.exports=index;
//# sourceMappingURL=index.min.js.map
