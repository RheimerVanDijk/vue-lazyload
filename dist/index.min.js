/*!
 * vt-lazyload v1.1.0
 * (c) Rheimer van Dijk
 * Released under the MIT License.
 */
"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}var index={install:function(e,t){var r="0px 0px 100px 0px",a=!1,n="lazyLoad";if(t&&(r=t.margin?t.margin:"0px 0px 100px 0px",a=!!t.fadeIn&&t.fadeIn,n=t.directive?t.directive:"lazyLoad",t.cssAnimate)){var i=document.createElement("link");i.rel="text/css",i.href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2/animate.min.css",document.head.appendChild(i),a=!1}e.directive(n,{bind:function(e,n){a&&(e.style.opacity="0",e.style.transition=a),new IntersectionObserver(function(r,i){r.forEach(function(r){if(r.isIntersecting){var o;if(n.value.animation){if(e.src=n.value.url,t.cssAnimate)(o=e.classList).add.apply(o,["animated"].concat(_toConsumableArray(n.value.animation)))}else e.src=n.value;a&&(e.style.opacity="1"),i.unobserve(r.target)}})},{rootMargin:r}).observe(e)}})}};module.exports=index;
//# sourceMappingURL=index.min.js.map
